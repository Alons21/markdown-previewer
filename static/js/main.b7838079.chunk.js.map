{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","input","maximizedWindow","handleChange","bind","script","document","createElement","src","async","body","appendChild","event","this","setState","target","value","__html","marked","sanitize","id","style","className","size","color","onClick","changeWindows","onChange","dangerouslySetInnerHTML","getMarkdownText","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sSAkHeA,E,kDA5Db,WAAYC,GAAQ,IAAD,8BACjB,gBACKC,MAAQ,CACXC,MAnDiB,qmCAoDjBC,gBARO,GAUT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,gEASjB,IAAMC,EAASC,SAASC,cAAc,UAEtCF,EAAOG,IAAM,kEACbH,EAAOI,OAAQ,EAEfH,SAASI,KAAKC,YAAYN,K,mCAEfO,GACXC,KAAKC,SAAS,CACZb,MAAOW,EAAMG,OAAOC,U,wCAKtB,MAAO,CAAEC,OADOC,IAAOL,KAAKb,MAAMC,MAAO,CAACkB,UAAU,O,oCAGxCJ,GACZF,KAAKC,SAAS,CACZZ,gBAAiBa,M,+BAGX,IAAD,OACP,OACE,sBAAKK,GAAG,cAAcC,MAAO,CAAC,wBApCvB,IAoCgDR,KAAKb,MAAME,gBAAyB,OAAO,WAAlG,UACE,sBAAKkB,GAAG,iBAAiBC,MAAO,CAAC,QAnCzB,IAmCoCR,KAAKb,MAAME,iBAA+B,QAAtF,UACE,sBAAKoB,UAAU,UAAf,UACE,uCAtCG,IAuCFT,KAAKb,MAAME,gBAA6B,cAAC,IAAD,CAAqBoB,UAAU,cACvEC,KAAM,GAAIC,MAAM,QAAQC,QAAS,kBAAM,EAAKC,cAzC5C,MA0CC,cAAC,IAAD,CAAqBJ,UAAU,cAAcG,QAAS,kBAAM,EAAKC,cAzChE,IA0CFH,KAAM,GAAIC,MAAM,aAEnB,0BACAJ,GAAG,SACHJ,MAAOH,KAAKb,MAAMC,MAClB0B,SAAUd,KAAKV,kBAEjB,sBAAKiB,GAAG,kBAAkBC,MAAO,CAAC,QAjD3B,IAiDsCR,KAAKb,MAAME,iBAA8B,QAAtF,UACE,sBAAKoB,UAAU,UAAf,UACE,wCAlDI,IAmDHT,KAAKb,MAAME,gBAA8B,cAAC,IAAD,CAAqBoB,UAAU,cACxEC,KAAM,GAAIC,MAAM,QAAQC,QAAS,kBAAM,EAAKC,cAtD5C,MAsDqE,cAAC,IAAD,CAAqBJ,UAAU,cAC7GC,KAAM,GAAIC,MAAM,QAAQC,QAAS,kBAAM,EAAKC,cArDhC,SAuDN,qBAAKN,GAAG,UAAUQ,wBAAyBf,KAAKgB,8B,GAtDxCC,IAAMC,WCzCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,M","file":"static/js/main.b7838079.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport marked from 'marked';\nimport { FaRegWindowMaximize } from \"react-icons/fa\";\nimport { FaRegWindowMinimize } from \"react-icons/fa\";\n\nlet placeholderMarkdown = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\nconst NONE = 0;\nconst EDITOR = 1;\nconst PREVIEW = 2;\nclass App extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      input: placeholderMarkdown,\n      maximizedWindow: NONE,\n    };\n    this.handleChange = this.handleChange.bind(this)\n  }\n  componentDidMount () {\n    const script = document.createElement(\"script\");\n\n    script.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n  }\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    })\n  }\n  getMarkdownText() {\n    var rawMarkup = marked(this.state.input, {sanitize: true});\n    return { __html: rawMarkup };\n  }\n  changeWindows(target) {\n    this.setState({\n      maximizedWindow: target,\n    })\n  }\n  render() {\n    return (\n      <div id=\"app-wrapper\" style={{\"grid-template-columns\": this.state.maximizedWindow !== NONE?\"100%\":\"50% 50%\"}}>\n        <div id=\"editor-wrapper\" style={{\"display\": this.state.maximizedWindow === PREVIEW && \"none\"}}>\n          <div className=\"nav-bar\">\n            <p>Editor</p>\n            {this.state.maximizedWindow === EDITOR ? <FaRegWindowMinimize className=\"window-mode\"\n             size={18} color=\"black\" onClick={() => this.changeWindows(NONE)}/> :\n              <FaRegWindowMaximize className=\"window-mode\" onClick={() => this.changeWindows(EDITOR)}\n             size={18} color=\"black\"/>}      \n          </div>\n          <textarea \n          id=\"editor\"\n          value={this.state.input}\n          onChange={this.handleChange}/>\n        </div>\n        <div id=\"preview-wrapper\" style={{\"display\": this.state.maximizedWindow === EDITOR && \"none\"}}>\n          <div className=\"nav-bar\">\n            <p>Preview</p>\n            {this.state.maximizedWindow === PREVIEW ? <FaRegWindowMinimize className=\"window-mode\"\n             size={18} color=\"black\" onClick={() => this.changeWindows(NONE)}/> : <FaRegWindowMaximize className=\"window-mode\"\n    size={18} color=\"black\" onClick={() => this.changeWindows(PREVIEW)}/>}     \n          </div>\n          <div id=\"preview\" dangerouslySetInnerHTML={this.getMarkdownText()}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}